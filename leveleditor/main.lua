-- unsorted operations for map preparation. Will be substituted by something meaningful one day
function love.load()

data = { -- Paste data between this line
{29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29},
{29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29},
{29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29},
{29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29},
{29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29},
{29,29,29,29,48,17,17,17,17,47,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29},
{29,29,29,29,30,0,0,0,0,27,29,29,29,29,29,29,48,17,17,17,17,17,17,17,17,47,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29},
{29,29,29,29,30,0,0,0,0,27,29,29,29,29,29,29,24,0,0,0,0,0,0,0,0,21,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29},
{29,29,29,29,30,0,0,0,0,27,29,29,29,29,29,29,24,0,9,10,11,10,12,0,0,21,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29},
{29,29,29,29,30,0,0,0,0,39,17,17,17,17,17,17,42,0,21,29,29,29,30,0,0,15,40,40,40,40,40,40,40,40,40,40,40,40,40,47,28,23,29,48,17,17,17,17,17,17,17,17,17,17,47,29,29,29,29,29},
{29,29,29,29,30,0,0,0,0,0,0,0,0,0,0,0,0,0,27,29,29,29,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,23,23,29,30,0,0,0,0,0,0,0,0,0,0,27,29,29,29,29,29},
{29,29,29,29,30,0,0,0,0,0,0,0,0,0,0,0,0,0,27,29,29,29,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,23,29,29,30,0,0,0,0,0,0,0,0,0,0,27,29,29,29,29,29},
{29,29,29,29,30,0,0,0,0,9,10,10,10,10,10,10,10,10,45,29,29,29,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,17,17,17,18,0,0,0,0,0,0,0,0,0,0,27,29,29,1,29,29},
{29,29,29,29,30,0,0,0,0,27,29,29,29,29,29,29,29,29,29,29,29,29,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,29,29,1,29,29},
{29,29,29,29,30,0,0,0,0,27,29,29,29,29,29,29,29,29,29,29,29,29,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,29,29,1,29,29},
{29,29,29,29,30,0,0,0,0,27,29,29,29,29,29,29,29,29,29,29,29,29,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,10,10,10,12,0,0,0,0,0,0,0,0,0,0,27,29,1,1,29,29},
{29,29,29,29,30,0,0,0,0,27,29,29,29,29,29,29,29,29,29,29,29,29,44,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,29,29,29,30,0,0,0,0,0,0,0,0,0,0,27,29,1,29,29,29},
{29,29,29,29,30,0,0,0,0,27,29,29,29,29,29,29,29,29,29,29,29,29,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,29,29,29,30,0,0,0,0,0,0,0,0,0,0,27,29,29,29,29,29},
{29,29,29,29,30,0,0,0,0,27,29,29,29,29,29,29,29,29,29,29,29,29,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,29,29,29,30,0,0,0,0,0,0,0,0,0,0,27,29,29,29,29,29},
{29,29,29,29,30,0,0,0,0,27,29,29,29,29,29,29,29,29,29,29,48,16,18,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,27,29,29,29,44,10,10,10,10,10,10,10,10,10,10,43,29,29,29,29,29},
{29,29,29,29,30,0,0,0,0,27,29,29,29,29,29,29,29,29,29,29,30,0,0,0,0,0,0,0,0,32,0,0,0,0,0,0,0,0,0,27,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29},
{29,29,29,29,30,0,0,0,0,27,29,29,29,29,29,29,29,29,29,29,30,0,0,0,0,0,0,0,0,38,0,0,0,0,0,0,0,0,0,27,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29},
{29,29,29,29,30,0,0,0,0,33,35,35,35,35,35,35,35,35,35,35,36,0,0,0,0,0,0,0,0,25,0,0,0,0,0,0,0,0,0,27,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29},
{29,29,29,29,30,0,0,0,0,27,29,29,29,29,29,29,29,29,29,29,30,0,0,0,0,0,0,0,0,31,0,0,0,0,0,0,0,0,0,27,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29},
{29,29,29,29,30,0,0,0,0,27,29,29,29,29,29,29,29,29,29,29,30,0,0,0,0,0,0,0,0,31,0,0,0,0,0,0,0,0,0,27,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29},
{29,29,29,29,30,0,0,0,0,27,29,29,29,29,29,29,29,29,29,29,30,0,0,0,0,0,0,0,0,31,0,0,0,0,0,0,0,0,0,27,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29},
{29,29,29,29,30,0,0,0,0,27,29,29,29,29,29,29,29,29,29,29,30,0,0,0,0,0,0,0,0,37,0,0,0,0,0,0,0,0,0,27,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29},
{29,29,29,29,30,0,0,0,0,27,29,29,29,29,29,29,29,29,29,29,30,0,0,0,0,0,3,4,5,5,4,5,6,0,0,0,0,0,0,27,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29},
{29,29,29,29,30,0,0,0,0,27,29,29,29,29,29,29,29,29,29,29,30,0,0,0,0,0,0,25,0,0,0,25,0,0,0,0,0,0,0,27,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29},
{29,29,29,29,30,0,0,0,0,27,29,29,29,29,29,29,29,29,29,29,30,0,0,0,0,0,0,31,0,0,0,31,0,0,0,0,0,0,0,27,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29},
{29,29,29,29,30,0,0,0,0,15,16,16,16,16,16,16,16,16,16,16,18,0,0,0,0,0,0,31,0,0,0,31,0,0,0,0,0,0,0,27,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29},
{29,29,29,29,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,0,0,0,31,0,0,0,0,0,0,0,27,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29},
{29,29,29,29,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,37,0,0,0,0,0,0,0,27,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29},
{29,29,29,29,44,10,10,10,10,11,10,11,10,10,45,22,22,46,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,43,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29},
{29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29},
{29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29},
{29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29},
{29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29},
{29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29},
{29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29},
{29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29},
{29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29},
{29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29},
{29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29},
{29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29}


} -- and this line

tileToCollision = { -- Tilemap information, only correct for ruin map
  1,1,1,1,1,1,
  1,1,1,1,1,1,
  0,1,1,1,1,1,
  0,1,1,1,1,1,
  0,1,1,1,1,1,
  0,1,1,1,1,1,
  0,1,1,1,1,1,
  1,1,1,1,1,1
}
tileToCollision[0] = 0

width = #data
height = #data[1]
--print(width)
--print(height)

backstring = ''
backstring2 = ''


for j = 1,height do
	local newlinesymbol = '\},\r\n'
	if j == height then newlinesymbol = '\}\r\n' end
	for i = 1,width do
	  local filler = ','
	  if i == 1 then filler = '  \{' end
		if data[i] and data[i][j] then
--      print(data[i][j])
			backstring = backstring .. filler .. data[i][j]
			backstring2 = backstring2 .. filler .. tileToCollision[data[i][j]]
		else
			backstring = backstring .. filler .. '0'
			backstring2 = backstring2 .. filler .. '0'
		end
	end
	backstring = backstring .. newlinesymbol
	backstring2 = backstring2 .. newlinesymbol
end

writedata = ''
writedata = writedata .. 'mapSize(' .. width .. ', ' .. height .. ', ' .. 32 .. ')\r\n'
writedata = writedata .. 'imageFilename("tiles1.png")'.. '\r\n'
writedata = writedata .. 'loadTiles\{\r\n' .. backstring .. '\}\r\n'
writedata = writedata .. 'loadCollision\{\r\n' .. backstring2 .. '\}'


love.filesystem.write('ruinstranspose.dat',writedata)

love.event.quit()
end

function love.keypressed(key)
  if key == 'escape' then
    love.event.quit()
  end
end
